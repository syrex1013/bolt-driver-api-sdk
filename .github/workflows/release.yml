name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Run tests
      run: npm test
      
    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version
          VERSION=${GITHUB_REF#refs/tags/v}
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION=${{ github.event.inputs.version }}
          fi
          
          # Extract changelog section for this version
          CHANGELOG=$(awk "/^## \[$VERSION\]/{flag=1;next}/^## \[/{flag=0}flag" CHANGELOG.md)
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="Release $VERSION - See CHANGELOG.md for details"
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=Release $VERSION" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
        
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/
        asset_name: bolt-driver-api-${{ github.ref_name }}.tgz
        asset_content_type: application/gzip

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Verify publication
      run: |
        sleep 10
        VERSION=${GITHUB_REF#refs/tags/v}
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION=${{ github.event.inputs.version }}
        fi
        npm view bolt-driver-api@$VERSION
        
    - name: Notify success
      run: |
        echo "‚úÖ Successfully published bolt-driver-api@$VERSION to NPM"
        echo "üì¶ Package: https://www.npmjs.com/package/bolt-driver-api"
        echo "üè∑Ô∏è  Version: $VERSION"
